require 'opal'
require 'opal-rspec'
<% 
spec_opts = ENV['SPEC_OPTS']
if spec_opts
	formatter_require_matches = spec_opts.scan /--require (\S+)/
	formatter_class_matches = spec_opts.scan /--format (\S+)/
	if formatter_require_matches.any? and formatter_class_matches.any?
		# TeamCity will try and add its own contents to SPEC_OPTS but we need to supercede those
		valid_format_classes = formatter_class_matches.flatten.reject {|f| f == 'Spec::Runner::Formatter::TeamcityFormatter'}
		formatter_class = valid_format_classes.last
		valid_require_matches = formatter_require_matches.flatten.reject {|r| r == 'teamcity/spec/runner/formatter/teamcity/formatter' }
	
		valid_require_matches.each do |format_req|
%>	
			require '<%= format_req %>'
	<% end %>

		RSpec.configure do |config|
		  config.default_formatter = <%= formatter_class %>
		end
<% 
	end
end %>

# We've interrupted the usual opal-rspec flow to set the formatter, now run the rest of the 's.main' code
# This environment variable was set in the Rake task monkey patch in this GEM
require <%= ENV['opal_rspec_after_formatter_set'].inspect %>
