require 'opal'
require 'opal-rspec'
<% 
spec_opts = ENV['SPEC_OPTS']
if spec_opts
	requires = ::Opal::RSpec::RakeTask.get_requires
	formatter_class_matches = spec_opts.scan /--format (\S+)/
	if requires.any? and formatter_class_matches.any?
		# TeamCity will add its own contents to SPEC_OPTS but we need to supercede those
		requires = requires.map {|r| r == 'teamcity/spec/runner/formatter/teamcity/formatter' ? 'opal/rspec/formatters/teamcity' : r}
		formats = formatter_class_matches.flatten.map {|f| f == 'Spec::Runner::Formatter::TeamcityFormatter' ? 'Opal::RSpec::Formatters::TeamCity' : f}		

		formatter_class = formats.last	
		requires.each do |format_req|
%>	
			require '<%= format_req %>'
	<% end %>

		RSpec.configure do |config|
		  config.default_formatter = <%= formatter_class %>
		end
<% 
	end
end %>

# We've interrupted the usual opal-rspec flow to set the formatter, now run the rest of the 's.main' code
# This environment variable was set in the Rake task monkey patch in this GEM
require <%= ENV['opal_rspec_after_formatter_set'].inspect %>
